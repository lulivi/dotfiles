#!/usr/bin/env bash

# Xresources.edit
#
# Some operating systems do not use cpp when loading ~/.Xresources at session
# startup (they run xrdb with the -nocpp option).
# This script is a wrapper around your $EDITOR that allows you to use cpp
# directives for your ~/.Xresources.src and will automatically rebuild
# ~/.Xresources when you save the file.
#
# Author: Olivier Mengu√© <dolmen@cpan.org>
# https://github.com/dolmen/Xresources.edit
#
# To install:
#    chmod u+x .Xresources.edit
#    ln -s Xresources.edit ~/.Xresources.edit
#    ~/.Xresources.edit

readonly base_x_file="$HOME/.Xresources"
readonly src_x_file="$base_x_file.src"


# Running as called as 'cpp' by 'xrdb'
if [ $# -gt 0 ]; then
    # Run cpp and save the result as ~/.Xresources
    [ -e "$base_x_file" ] && chmod u+w "$base_x_file"
    cpp "$@" | tee "$base_x_file"
    res=$?
    chmod a-wx "$base_x_file"
    exit $res
fi

ext=src

if [ ! -f "$src_x_file" ]; then
    # Initial setup: move .Xresources to .Xresources.$ext
    # and insert the warning
    {
        echo '! *************************************************'
        echo "! Do not edit ~/.Xresources, but ~/.Xresources.$ext"
        echo '! Use $base_x_file.edit to edit this file'
        echo '! *************************************************'
        echo '! vim:set ft=xdefaults:'
        echo '!'
        cat "$base_x_file"
    } > "$src_x_file"
    # Make .Xresources non-writable to discourage direct editing
    chmod a-wx "$base_x_file"
elif [ -f "$base_x_file" \
          -a "$base_x_file" \
          -nt "$src_x_file" ]; then
    {
        echo "~/.Xresources is more recent than ~/.Xresources.$ext"
        echo "You have to fix this manually. Sorry :("
    } >&2
    exit 1
fi

${EDITOR:-vim} "$src_x_file"
# Reload resources and call ourself as a wrapper around cpp (to create
# .Xresources)
if [ ! -f "$base_x_file" \
       -o "$src_x_file" \
       -nt "$base_x_file" ]; then
    xrdb -cpp "$0" "$src_x_file"
fi
touch $src_x_file
